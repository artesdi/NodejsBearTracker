---
swagger: "2.0"
info:
  description: "Bear Sighting Tracker by Artem Kolomeetc."
  version: "0.0.1"
  title: "Bear Sighting Tracker"
  contact:
    email: "artem@kolomeec.com"
host: "localhost:8080"
basePath: "/api/v1"
tags:
- name: "sighting"
  description: "Everything about your sightings"
schemes:
- "http"
paths:
  /sighting:
    post:
      tags:
      - "sighting"
      summary: "Add a new sighting with bears to the area"
      operationId: "addSighting"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "sighting object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Sighting"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int32"
        405:
          description: "Invalid input"
      security:
      - sightingstore_auth:
        - "write:sightings"
        - "read:sightings"
      x-swagger-router-controller: "Sighting"
  /sighting/{sightingId}:
    get:
      tags:
      - "sighting"
      summary: "Return a single sighting object queried by its ID"
      operationId: "getSightingById"
      produces:
      - "application/json"
      parameters:
      - name: "sightingId"
        in: "path"
        description: "ID of sighting to return"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Sighting"
        400:
          description: "Invalid ID supplied"
        404:
          description: "sighting not found"
      security:
      - api_key: []
      x-swagger-router-controller: "Sighting"
  /sighting/search:
    get:
      tags:
      - "sighting"
      summary: "Finds sightings by filter"
      description: "Return an array of sightings"
      operationId: "findSightingsByFilter"
      produces:
      - "application/json"
      parameters:
      - name: "start_date"
        in: "query"
        required: false
        type: "string"
        description: "default: all time"
      - name: "end_date"
        in: "query"
        required: false
        type: "string"
        description: "default: all time"
      - name: "bear_type"
        in: "query"
        required: false
        type: "string"
        description: "default: all types"
      - name: "zip_code"
        in: "query"
        required: false
        type: "string"
        description: "default: all zip codes"
      - name: "sort"
        in: "query"
        description: "only supported value is 'num_bears', created by timestamp (ascending) by default"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sighting"
        400:
          description: "Invalid status value"
      security:
      - sightingstore_auth:
        - "write:sightings"
        - "read:sightings"
      x-swagger-router-controller: "Sighting"
securityDefinitions:
  sightingstore_auth:
    type: "oauth2"
    authorizationUrl: "http://sightingstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:sightings: "modify sightings in your account"
      read:sightings: "read your sightings"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  BearType:
    type: "string"
    example: "grizzly"
    enum:
    - "grizzly"
    - "pizzly"
    - "panda"
    - "brown"
    - "black"
    - "polar"
    - "ursinae"
    - "other"
  Sighting:
    type: "object"
    required:
    - "bear_type"
    - "notes"
    - "num_bears"
    - "zip_code"
    properties:
      id:
        type: "integer"
        format: "int32"
      bear_type:
        $ref: "#/definitions/BearType"
      notes:
        type: "string"
      zip_code:
        type: "string"
      num_bears:
        type: "integer"
        format: "int16"
    example:
      notes: "It was a big one!"
      bear_type: "grizzly"
      id: 0
      zip_code: "90210"
      num_bears: 3
  inline_response_200:
    properties:
      id:
        type: "integer"
        format: "int32"
    example:
      id: 0
